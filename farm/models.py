import collections
import enum
import datetime


class Team(collections.namedtuple('Team', ('name', 'vulnbox'))):
    def __str__(self):
        return f'{self.name} on {self.vulnbox}'


class Flag:
    def __init__(self, flag, exploit_name='', team=''):
        self.flag = flag
        self.created_at = datetime.datetime.now()
        self.exploit_name = exploit_name
        self.team = team
        self.status = FlagStatus.DONT_SEND
        self.status_message = ''

    def update_status(self, status, status_message=''):
        self.status = status
        self.status_message = status_message

    def mark_as_send(self):
        self.update_status(FlagStatus.SEND)

    def mark_as_valid(self, message=''):
        self.update_status(FlagStatus.VALID, message)

    def mark_as_invalid(self, message=''):
        self.update_status(FlagStatus.INVALID, message)

    def __str__(self):
        return '%s by %s from %s (found at %s, status is %s%s)' % (
            self.flag,
            self.exploit_name,
            self.team,
            self.created_at,
            self.status,
            ', ' + self.status_message if self.status_message != '' else ''
        )


class FlagStatus(enum.Enum):
    DONT_SEND = 1,
    SEND = 2,
    VALID = 3,
    INVALID = 4
